import { Container, Text } from '@/components/bases';
import { FlashList } from '@shopify/flash-list';
import {
  MatchedUserCard,
  MessageThreadItem
} from '@/features/messages/components';
import { View, TouchableWithoutFeedback } from 'react-native';
import { formatRelativeTime } from '@/utils';
import { useMemo, useState, useCallback } from 'react';

export default function Messages() {
  const [openSwipeableId, setOpenSwipeableId] = useState<
    number | string | null
  >(null);

  const handleSwipeableWillOpen = useCallback((id: number | string) => {
    setOpenSwipeableId(id);
  }, []);

  const handleSwipeableClose = useCallback(() => {
    setOpenSwipeableId(null);
  }, []);

  const handleBackgroundPress = useCallback(() => {
    setOpenSwipeableId(null);
  }, []);

  const matchedUsers = useMemo(
    () => [
      {
        id: 1,
        age: 26,
        location: 'ÂåóÊµ∑ÈÅì',
        status: 'online' as const,
        imageSource: require('@/assets/images/users/01.png')
      },
      {
        id: 2,
        age: 30,
        location: 'Êù±‰∫¨',
        status: 'recent' as const,
        imageSource: require('@/assets/images/users/sample-cat.png')
      },
      {
        id: 3,
        age: 22,
        location: 'Â§ßÈò™',
        status: 'offline' as const,
        imageSource: require('@/assets/images/users/02.png')
      },
      {
        id: 4,
        age: 28,
        location: 'Á¶èÂ≤°',
        status: 'online' as const,
        imageSource: require('@/assets/images/users/sample-dog.png')
      },
      {
        id: 5,
        age: 25,
        location: 'Ê≤ñÁ∏Ñ',
        status: 'recent' as const,
        imageSource: require('@/assets/images/users/03.png')
      }
    ],
    []
  );

  const users = useMemo(
    () => [
      {
        id: 1,
        age: 26,
        nickname: '„Åï„Åè„Çâ',
        location: 'ÂåóÊµ∑ÈÅì',
        status: 'online' as const,
        lastMessage: '„Åä„ÅØ„Çà„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åô‚òÄÔ∏è‰ªäÊó•„ÅØ„ÅÑ„ÅÑÂ§©Ê∞ó„Åß„Åô„Å≠ÔºÅ',
        lastMessagedAt: new Date(Date.now() - 5 * 60 * 1000), // 5ÂàÜÂâç
        imageSource: require('@/assets/images/users/01.png')
      },
      {
        id: 2,
        age: 30,
        nickname: '„ÇÜ„ÅÜ„Åç',
        location: 'Êù±‰∫¨',
        status: 'recent' as const,
        lastMessage: '„Ç´„Éï„ÇßÂ•Ω„Åç„Å™„Çì„Åß„Åô„Å≠ÔºÅ‰ªäÂ∫¶‰∏ÄÁ∑í„Å´Ë°å„Åç„Åæ„Åõ„Çì„ÅãÔºüüòä',
        lastMessagedAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2ÊôÇÈñìÂâç
        imageSource: require('@/assets/images/users/sample-cat.png')
      },
      {
        id: 3,
        age: 22,
        nickname: '„ÅÇ„ÅÑ„Çä',
        location: 'Â§ßÈò™',
        status: 'offline' as const,
        lastMessage: '„Éó„É≠„Éï„Ç£„Éº„É´Ë¶ã„Åæ„Åó„ÅüÔºÅË∂£Âë≥„ÅåÂêà„ÅÑ„Åù„ÅÜ„Åß„Åô„Å≠‚ú®',
        lastMessagedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1Êó•Ââç
        imageSource: require('@/assets/images/users/02.png')
      },
      {
        id: 4,
        age: 28,
        nickname: '„Åë„Çì„Åü',
        location: 'Á¶èÂ≤°',
        status: 'online' as const,
        lastMessage: '„ÅÑ„ÅÑ„Å≠„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ',
        lastMessagedAt: new Date(Date.now() - 30 * 60 * 1000), // 30ÂàÜÂâç
        imageSource: require('@/assets/images/users/sample-dog.png')
      },
      {
        id: 5,
        age: 25,
        nickname: '„Åæ„Å™',
        location: 'Ê≤ñÁ∏Ñ',
        status: 'recent' as const,
        lastMessage: '„Åù„ÅÜ„Å™„Çì„Åß„Åô„Å≠ÔºÅÁßÅ„ÇÇÊò†ÁîªÂ•Ω„Åç„Åß„Åôüé¨',
        lastMessagedAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6ÊôÇÈñìÂâç
        imageSource: require('@/assets/images/users/03.png')
      },
      {
        id: 6,
        age: 27,
        nickname: '„ÇÜ„ÅÜ„Åü',
        location: 'ÂêçÂè§Â±ã',
        status: 'online' as const,
        lastMessage: 'ÈÄ±Êú´„ÅØ‰Ωï„Åó„Å¶„Åæ„Åô„ÅãÔºü',
        lastMessagedAt: new Date(Date.now() - 10 * 60 * 1000), // 10ÂàÜÂâç
        imageSource: require('@/assets/images/users/default-user.jpg')
      },
      {
        id: 7,
        age: 23,
        nickname: '„Åø„Åä',
        location: 'Á•ûÊà∏',
        status: 'offline' as const,
        lastMessage: '„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åôüòä„Åæ„Åü„ÅäË©±„Åó„Åæ„Åó„Çá„ÅÜÔºÅ',
        lastMessagedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3Êó•Ââç
        imageSource: require('@/assets/images/users/01.png')
      },
      {
        id: 8,
        age: 29,
        nickname: '„Çä„Çá„ÅÜ',
        location: 'Ê®™Êµú',
        status: 'recent' as const,
        lastMessage: '„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ',
        lastMessagedAt: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12ÊôÇÈñìÂâç
        imageSource: require('@/assets/images/users/02.png')
      },
      {
        id: 9,
        age: 24,
        nickname: '„Å™„Å™',
        location: 'Êú≠Âπå',
        status: 'online' as const,
        lastMessage: '„Éû„ÉÉ„ÉÅ„É≥„Ç∞„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„Åôüíï',
        lastMessagedAt: new Date(Date.now() - 15 * 60 * 1000), // 15ÂàÜÂâç
        imageSource: require('@/assets/images/users/03.png')
      },
      {
        id: 10,
        age: 31,
        nickname: '„Å†„ÅÑ„Åç',
        location: '‰ªôÂè∞',
        status: 'offline' as const,
        lastMessage: '„ÅäË©±„Åß„Åç„Å¶Ê•Ω„Åó„Åã„Å£„Åü„Åß„ÅôÔºÅ',
        lastMessagedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2Êó•Ââç
        imageSource: require('@/assets/images/users/default-user.jpg')
      }
    ],
    []
  );

  // „É°„ÉÉ„Çª„Éº„Ç∏‰∏ÄË¶ß„Éá„Éº„Çø„Å´Áõ∏ÂØæÊôÇÈñì„ÇíËøΩÂä†„Åó„ÄÅÊúÄÊñ∞È†Ü„Å´„ÇΩ„Éº„Éà
  const usersWithFormattedTime = useMemo(() => {
    const now = new Date();
    return users
      .map((user) => ({
        ...user,
        formattedTime: formatRelativeTime(user.lastMessagedAt, now)
      }))
      .sort((a, b) => b.lastMessagedAt.getTime() - a.lastMessagedAt.getTime());
  }, [users]);

  return (
    <TouchableWithoutFeedback onPress={handleBackgroundPress}>
      <View style={{ flex: 1 }}>
        <Container isPaddingTop={false}>
          {/* Êñ∞„Åó„ÅÑ„Éû„ÉÉ„ÉÅ„É≥„Ç∞‰∏ÄË¶ß */}
          <Text className='text-m font-bold text-body'>„Éû„ÉÉ„ÉÅ„É≥„Ç∞‰∏≠</Text>
          <View className='-mx-5 mt-3'>
            <FlashList
              data={matchedUsers}
              horizontal
              showsHorizontalScrollIndicator={false}
              contentContainerStyle={{ paddingHorizontal: 16 }}
              renderItem={({ item }) => (
                <MatchedUserCard
                  imageSource={item.imageSource}
                  userId={item.id}
                  age={item.age}
                  location={item.location}
                  onlineStatus={item.status}
                />
              )}
              keyExtractor={(item) => item.id.toString()}
            />
          </View>
          <View className='my-8 border-b border-gray-200' />

          {/* „É°„ÉÉ„Çª„Éº„Ç∏‰∏ÄË¶ß */}
          <View className='-mx-5'>
            <FlashList
              data={usersWithFormattedTime}
              scrollEnabled={false}
              renderItem={({ item }) => (
                <MessageThreadItem
                  imageSource={item.imageSource}
                  userId={item.id}
                  nickname={item.nickname}
                  age={item.age}
                  location={item.location}
                  onlineStatus={item.status}
                  lastMessage={item.lastMessage}
                  formattedTime={item.formattedTime}
                  isOpen={openSwipeableId === item.id}
                  hasOtherOpen={
                    openSwipeableId !== null && openSwipeableId !== item.id
                  }
                  onSwipeableWillOpen={() => handleSwipeableWillOpen(item.id)}
                  onSwipeableClose={handleSwipeableClose}
                  onOtherItemPress={handleBackgroundPress}
                />
              )}
              keyExtractor={(item) => item.id.toString()}
            />
          </View>
        </Container>
      </View>
    </TouchableWithoutFeedback>
  );
}
